{"version":3,"sources":["webpack:///./src/pages/data.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Page.tsx","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Dirs","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts__WEBPACK_IMPORTED_MODULE_6__","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_components_Container__WEBPACK_IMPORTED_MODULE_5__","allDirectory","edges","map","_ref2","node","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","name","query","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","heights","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","getEmSize","Container","className","_variables__WEBPACK_IMPORTED_MODULE_0__","size","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","StyledPage","Page","normalize","StyledHeader","styled_base_browser_esm","transparentize","HeaderInner","styles","HomepageLink","Link","GithubLink","Header","title","core_browser_esm","href","index_es","icon","faGithub","style","color","StyledLayoutRoot","LayoutRoot","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_LayoutMain","_991718019","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-data-tsx-d508d743160e60ab9cac.js","sourcesContent":["import * as React from 'react'\nimport { graphql, Link } from \"gatsby\"\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface DirProps {\n  data: {\n    allDirectory: {\n      edges: [\n        {\n          node: {\n            name: string\n            relativePath: string\n            fields: {\n              slug: string\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n\nconst Dirs: React.FC<DirProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>データ一覧</h1>\n        <ul>\n          {data.allDirectory.edges.map(({ node }) => (\n            <li>\n              <Link to={ `/${node.fields.slug}` } >\n                {node.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default Dirs\nexport const query = graphql`\n  query {\n    allDirectory(filter: {relativePath: {ne: \"\"}}) {\n      edges {\n        node {\n          name\n          relativePath\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 60\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from '@emotion/styled'\nimport { transparentize } from 'polished'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-right: auto;\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\nconst GithubLink = styled(Container)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-right: 20px;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n      <GithubLink>\n        <a href=\"https://github.com/codeforjapan/mynumbercard_statistics\">\n          <FontAwesomeIcon icon={faGithub} style={{ color: colors.white }} />\n        </a>\n      </GithubLink>\n    </HeaderInner>\n  </StyledHeader>\n)\n\nexport default Header\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}